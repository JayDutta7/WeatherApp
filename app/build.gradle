apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {

    def apiKeyPropertiesFile = rootProject.file("apikey.properties")
    def apiKeyProperties = new Properties()
    apiKeyProperties.load(new FileInputStream(apiKeyPropertiesFile))

    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.home.weatherapp"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        multiDexEnabled true
        versionCode 1
        versionName "0.0.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        // should correspond to key/value pairs inside the file
        buildConfigField("String", "CONSUMER_KEY", apiKeyProperties['CONSUMER_KEY'])
    }

    buildTypes {
        release {
            minifyEnabled true  // shrink
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false  // shrink
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

    }
    androidExtensions {
        experimental = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    // work-runtime-ktx 2.1.0 and above now requires Java 8
    kotlinOptions {
        jvmTarget = "1.8"
    }
    buildFeatures {
        //data-binding
        dataBinding = true
        // for view binding:
        // viewBinding = true
    }
}



dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$rootProject.kotlin_version"
    implementation "androidx.appcompat:appcompat:$rootProject.appcompat_version"
    implementation "androidx.core:core-ktx:$rootProject.ktxVersion"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintLayout"
    //Dagger
    implementation "com.google.dagger:dagger:$rootProject.dagger_version"
    kapt "com.google.dagger:dagger-compiler:$rootProject.dagger_version"
    implementation "com.google.dagger:dagger-android:$rootProject.dagger_version"
    implementation "com.google.dagger:dagger-android-support:$rootProject.dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.dagger_version"
    //cardview
    implementation "androidx.cardview:cardview:$rootProject.cardView"
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$rootProject.lifecycle_version"
    implementation "android.arch.lifecycle:extensions:$rootProject.lifecycle_version"
    implementation "com.google.code.gson:gson:$rootProject.gson"
    //Glide
    implementation "com.github.bumptech.glide:glide:$rootProject.glidE"
    //annotaionation processor for java kapt for kotlin
    kapt "com.github.bumptech.glide:compiler:$rootProject.glidE"
    //Glide Annotation
    kapt "com.github.bumptech.glide:annotations:$rootProject.glidE"
    //okhtttp for glide
    implementation "com.github.bumptech.glide:okhttp3-integration:$rootProject.glidE"
    //Multidex
    implementation "androidx.multidex:multidex:$rootProject.multidex"
    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofit"
    implementation "com.google.code.gson:gson:$rootProject.googleGson"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitGsonConverter"
    //coroutines adapter retrofit(jake-)
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$rootProject.coroutinesAdapter"
    //okhttp3
    implementation "com.squareup.okhttp3:okhttp:$rootProject.okhttp"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.httpIntaceptor"
    //Timber-Log
    implementation "com.jakewharton.timber:timber:$rootProject.timberLog"
    // Room dependencies(Database)
    implementation "androidx.room:room-runtime:$rootProject.roomDatabase"
    kapt "androidx.room:room-compiler:$rootProject.roomDatabase"
    //RecyclerView
    implementation "androidx.recyclerview:recyclerview:$rootProject.xRecyclerView"
    // For control over item selection of both touch and mouse driven selection
    implementation "androidx.recyclerview:recyclerview-selection:$rootProject.xRecyclerViewSelection"
    //Material Design
    implementation "com.google.android.material:material:$rootProject.materialDesign"
    //circle imageview
    implementation "de.hdodenhof:circleimageview:$rootProject.circleImageView"
    //Dimen Lib(For----Sdp)
    implementation "com.intuit.sdp:sdp-android:$rootProject.dimenLib"
    //Dexter
    implementation "com.karumi:dexter:$rootProject.dexter"
    //paging
    implementation "android.arch.paging:runtime:$rootProject.paging"
    //coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.coroutinesVersion"
    //Testing
    testImplementation "junit:junit:$rootProject.junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$rootProject.testImplementationjUnit"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.testExpresso"

}
